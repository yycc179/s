<%include header%>


    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.11.0/bootstrap-table.min.css">
    <link href="//cdn.bootcss.com/x-editable/1.5.1/bootstrap-editable/css/bootstrap-editable.css" rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/dashboard.css">
    <link rel="stylesheet" href="/stylesheets/jquery.jqplot.css">

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-9 col-md-2 sidebar">
                <ul class="nav nav-sidebar" id='city'>
                    <% cities.forEach((city, i) => { %>
                        <li value="<%=city._id%>" <%=i==0 ? "class=active" : '' %>>
                            <a>
                                <%=city.country%>-
                                    <%=city.city%>
                            </a>
                        </li>
                        <% })%>
                </ul>
            </div>

            <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
                <div class="row">
                    <div id="graphic" class="col-md-4"></div>
                    <div id="summary" class="col-md-4"></div>
                    <div class="col-md-2">
                        <label for="ef_time" class="col-md-10 control-label">Effective time</label>
                        <select id='ef_time' class="form-control"></select>
                    </div>
                </div>
                <br>
                <div class="row">
                    <div id="toolbar" class="btn-group">
                        <button id="btn_add" type="button" class="btn btn-default">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Add
                        </button>
                        <button id="btn_save" type="button" class="btn btn-default">
                        <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>Save
                        </button> 
                        <button id="btn_remove" type="button" class="btn btn-default">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>Remove
                        </button>                           

                    </div>

                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>

    <script src="//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.11.0/bootstrap-table.min.js"></script>

    <script src="/javascripts/jquery.jqplot.min.js"></script>
    <script src="/javascripts/plugins/jqplot.canvasTextRenderer.min.js"></script>
    <script src="/javascripts/plugins/jqplot.canvasAxisLabelRenderer.min.js"></script>
    <script src="/javascripts/plugins/jqplot.cursor.min.js"></script>
    <script src="/javascripts/plugins/jqplot.pointLabels.min.js"></script>
    <script src="/javascripts/plugins/jqplot.barRenderer.min.js"></script>
    <script src="/javascripts/plugins/jqplot.categoryAxisRenderer.min.js"></script>

    <script src="/javascripts/bootstrap-table-editable.js"></script>
    <script src="/javascripts/bootstrap-editable.min.js"></script>

    <script src="//cdn.bootcss.com/babel-standalone/6.23.1/babel.min.js"></script>
    <script type="text/babel" src="/javascripts/common.js"></script>

    <script type="text/babel">

        function randommac(size=12) {
            var code_string = "ABCDEF0123456789";
            var max_num = code_string.length + 1;
            var string = '';
            while (size > 0) {
                string += code_string.charAt(Math.floor(Math.random() * max_num));
                size--;
            }
            return string;
        };

        $('#btn_add').click(function() {
            var snr = (Math.random() * 30).toFixed(2);
            var mac = randommac();
            var ip =  '10.' + parseInt(snr) + '.' + (Math.random() * 250).toFixed(2)
            
            var params = {index: 0, row:{ip, snr, mac, new: true}}
            $('#table').bootstrapTable('insertRow', params);
        })

        $('#btn_save').click(function() {
            var all = $('#table').bootstrapTable('getData');
            var edit = all.filter(i => i.edit || i.new)
            if(!edit.length) {
                return alert('Nothing change!')
            }
            edit.map(d => {
                delete d.edit;
                delete d.new
            })
            $('#table').bootstrapTable('showLoading');
            $.ajax({
                type: "post",
                url: '/api/mock/save/'+ current,
                data: JSON.stringify(edit),
                contentType: "application/json",
                dataType: 'json',
                error: () => {$('#table').bootstrapTable('hideLoading'), alert('Save fail, may have duplicate data!')},
                complete: function () {
                    request_graphic(current);
                    request_summary(current);
                    refresh_table(current);
                }
            });
        })

        $('#btn_remove').click(function() {
            if(!confirm('Delete all data?')) {
                return;
            }
            $.post('/api/mock/remove/'+ current, 
                () => {
                request_graphic(current);
                request_summary(current);
                refresh_table(current);
            })
        })

        function refresh_table(city) {
            $('#table').bootstrapTable('destroy');
            $('#table').bootstrapTable({
                url: "/api/stats/snr/json/" + city,
                toolbar: '#toolbar', 
                toolbarAlign: 'right',
                striped: true,
                sortName: 'updatedAt',
                sortOrder: 'desc',
                sortable:true,
                pagination: true,
                sidePagination: "server",
                pageSize: 10,
                idField : 'mac',
                onEditableSave: function(field, row, oldValue) {
                    row.edit = row[field] !== oldValue;
                },
                columns: [{
                    field: 'mac',
                    title: 'MAC Address',
                }, {
                    field: 'ip',
                    title: 'IP Address',
                }, {
                    field: 'snr',
                    title: 'SNR',
                    sortable: true,
                    align: 'center',
                    editable: {
                        type: 'text',
                        title: 'SNR',
                        mode: 'inline',
                        validate: function (v) {
                            if (isNaN(v)) return 'Should be a number';
                            if (v <= 0 || v > 30) return 'input 0 - 30';
                        }
                    },
                    cellStyle: function (value, row, index, field) {
                        var strclass = "";
                        if (value > 25) {
                            strclass = 'success';
                        }
                        else if (value > 15) {
                            strclass = 'info';
                        }
                        else if (value > 5) {
                            strclass = 'warning';
                        }
                        else {
                            strclass = 'danger';
                        }
                        return { classes: strclass }
                    }
                }, {
                    field: 'times',
                    title: 'Update times',
                    align: 'center'
                }, {
                    field: 'updatedAt',
                    title: 'Last updated',
                    sortable: true,
                    align: 'center',
                    formatter: function (value, row, index) {
                        return new Date(Date.parse(value)).toLocaleString()
                    }
                }, {
                    field: 'operate',
                    title: 'Operate',
                    align: 'center',
                    formatter: function (value, row, index) {
                        return "<a class='remove' href=javascript:void(0) title='Remove'><i class='glyphicon glyphicon-remove'></i></a>"
                    },
                    events:{
                        'click .remove':function(e, value, row, index) {
                            if(!row.new) {
                                $.post(`/api/mock/remove/${current}/${row.mac}`, function() {
                                    request_graphic(current);
                                    request_summary(current);
                                })
                            } 
                            $('table').bootstrapTable('remove', {
                                field: 'mac',
                                values: [row.mac]
                            });
                        }
                    }
                }],
            });
        }

        function request_graphic(city, time = $('#ef_time').val()) {
            $.getJSON(`/api/stats/snr/city/${city}?t=${time}`, data => {
                console.log("done")
                var plot1 = $.jqplot('graphic', [data], {
                    title: 'SNR distribution',
                    seriesDefaults: {
                        showMarker: false,
                    },
                    cursor: {
                        show: true,
                        zoom: true
                    },
                    axes: {
                        xaxis: {
                            label: "SNR(db)",
                            renderer: $.jqplot.CategoryAxisRenderer,
                        },
                        yaxis: {
                            label: "Peer number",
                            tickOptions: {
                                formatString: '%d'
                            },
                            labelRenderer: $.jqplot.CanvasAxisLabelRenderer
                        }
                    }
                }).replot();
            })
        }

        function request_summary(city, time = $('#ef_time').val()) {
            $.getJSON(`/api/stats/snr/summary/${city}?t=${time}`, data => {
                $.jqplot('summary', [data], {
                    title: 'Summary(x peer < y)',
                    seriesDefaults: {
                        renderer: $.jqplot.BarRenderer,
                        rendererOptions: {
                            barMargin: 15,
                        },
                        pointLabels: { show: true },
                    },
                    axes: {
                        xaxis: {
                            label: "Factor",
                            renderer: $.jqplot.CategoryAxisRenderer,
                        },
                        yaxis: {
                            label: "SNR(db)",
                            max: 30,
                            tickOptions: {
                                formatString: '%.2f'
                            },
                            labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
                        }
                    }

                }).replot();

            })
        }

        [
            [30, "within 0.5 Hour"],
            [60, "within 1 Hour"],
            [120, "within 2 Hour"],
            [240, "within 4 Hour"],
            [0, "All"],
        ].forEach(data => select_draw('#ef_time', data, <%=time %>));

        var current = "<%=cities.length ? cities[0]._id : undefined %>";

        if (current) {
            request_graphic(current);
            request_summary(current);
            refresh_table(current);

            $("#city").children().click(function (e) {
        
                current = $(this).attr('value')
                $(this).siblings().removeClass('active');
                $(this).addClass('active')
                refresh_table(current);
                request_graphic(current);
                request_summary(current);
            })

            $('#ef_time').change(e => {
                request_graphic(current, e.target.value);
                request_summary(current, e.target.value);
            })
        }
    </script>

<style>

#graphic {
    width: 45%;
    height: 350px
}

#summary {
    width: 30%;
    height: 350px    
}

</style>

    <%include footer%>